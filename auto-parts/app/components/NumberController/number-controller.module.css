.container {
    position: relative;
    height: 6vh;
    border: 0.125rem solid var(--main-darkish);
    font-size: 1.5rem;
    display: flex;
    justify-content: space-around;
    align-items: center;
    border-radius: 1rem;
    transition: var(--global-transition);
    overflow: hidden;

    @media screen and (hover: hover){
        width: 9vw;

        &:hover{
            width: 10.5vw;
        }

        &:hover .controller {
            opacity: 1;
        }
    }

    @media screen and (hover: none){
        width: 20vw;

        & .controller {
            opacity: 1;
        }
    }

    & div {
        flex-grow: 1;
        text-align: center;
        position: relative;
        width: 100%;
        height: 100%;
        line-height: 6vh;
        user-select: none;
    }

    .controller {
        @media screen and (hover: hover){
            opacity: 0;
            transition: var(--global-transition);
            cursor: pointer;
        }
        font-weight: 600;
    }

    /* It must be able to shrink or grow depending on the input's length. I need to achieve it. */
    .amount-box {
        flex-grow: 2;
        color: var(--info);
        overflow: hidden;

        & input {
            border: none;
            outline: none;
            width: 100%;
            height: 100%;
            font-size: inherit;
            margin: 0;
            appearance: none;
            -moz-appearance: textfield;
            text-align: center;
        }

        & input::-webkit-inner-spin-button,
        & input::-webkit-outer-spin-button {
            appearance: none;
            margin: 0;
        }
    }

    .prev {
        color: var(--danger);

        @media screen and (hover: hover){
            &:hover {
                color: var(--main-lightish);
                background-color: var(--danger);
            }
        }

        @media screen and (hover: none){
            &:active {
                color: var(--main-lightish);
                background-color: var(--danger);
            }
        }
    }

    .next {
        color: var(--main-green);

        @media screen and (hover: hover){
            &:hover {
                color: var(--main-darkish);
                background-color: var(--main-green);
            }
        }

        @media screen and (hover: none){
            &:active {
                color: var(--main-darkish);
                background-color: var(--main-green);
            }
        }
    }
}